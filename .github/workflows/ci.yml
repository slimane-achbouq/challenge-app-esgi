name: CI

on:
  push:
#    branches:
#      - main
  pull_request: ~
  workflow_dispatch: ~

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Pull images
        run: docker compose pull --ignore-pull-failures || true
      - name: Start services
        run: docker compose up --build -d
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker compose ps
                docker compose logs
                exit 1
              ;;
            esac
          done
          exit 1
      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      - name: Check API reachability
        run: curl -vk -o /dev/null https://localhost
      - name: Check PWA reachability
        run: "curl -vk -o /dev/null -H 'Accept: text/html' https://localhost"
      - name: Create test database
        run: |
          docker compose exec -T php bin/console d:d:c --env=test
          docker compose exec -T php bin/console d:s:u --force --no-interaction --env=test
          docker compose exec -T php bin/console d:f:l --env=test --no-interaction
          docker compose exec -T php bin/console lexik:jwt:generate-keypair
      - name: PHPUnit
        run: docker compose exec -T php bin/phpunit
      - name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console doctrine:schema:validate --skip-sync
  build-container:
    # just for test
    if: always()
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: slimane2/challenge-app-esgi:latest, slimane2/challenge-app-esgi:${{ github.run_number }}
          
